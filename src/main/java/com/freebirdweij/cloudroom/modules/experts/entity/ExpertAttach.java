package com.freebirdweij.cloudroom.modules.experts.entity;

import java.sql.Blob;

import com.freebirdweij.cloudroom.common.persistence.IdEntity;

/**
 * Model class of 专家附件.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class ExpertAttach extends IdEntity<ExpertAttach> {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 附件ID. */
	private String id;

	/** 专家信息表. */
	private ExpertInfo expertInfo;

	/** 附件名称. */
	private String attachName;

	/** 附件类型. */
	private String attachType;

	/** 附件位置. */
	private String attachLink;

	/** 附件存储. */
	private Blob attachStore;

	/**
	 * Constructor.
	 */
	public ExpertAttach() {
	}

	/**
	 * Set the 附件ID.
	 * 
	 * @param id
	 *            附件ID
	 */
	public void setId(String id) {
		this.id = id;
	}

	/**
	 * Get the 附件ID.
	 * 
	 * @return 附件ID
	 */
	public String getId() {
		return this.id;
	}

	/**
	 * Set the 专家信息表.
	 * 
	 * @param expertInfo
	 *            专家信息表
	 */
	public void setExpertInfo(ExpertInfo expertInfo) {
		this.expertInfo = expertInfo;
	}

	/**
	 * Get the 专家信息表.
	 * 
	 * @return 专家信息表
	 */
	public ExpertInfo getExpertInfo() {
		return this.expertInfo;
	}

	/**
	 * Set the 附件名称.
	 * 
	 * @param attachName
	 *            附件名称
	 */
	public void setAttachName(String attachName) {
		this.attachName = attachName;
	}

	/**
	 * Get the 附件名称.
	 * 
	 * @return 附件名称
	 */
	public String getAttachName() {
		return this.attachName;
	}

	/**
	 * Set the 附件类型.
	 * 
	 * @param attachType
	 *            附件类型
	 */
	public void setAttachType(String attachType) {
		this.attachType = attachType;
	}

	/**
	 * Get the 附件类型.
	 * 
	 * @return 附件类型
	 */
	public String getAttachType() {
		return this.attachType;
	}

	/**
	 * Set the 附件位置.
	 * 
	 * @param attachLink
	 *            附件位置
	 */
	public void setAttachLink(String attachLink) {
		this.attachLink = attachLink;
	}

	/**
	 * Get the 附件位置.
	 * 
	 * @return 附件位置
	 */
	public String getAttachLink() {
		return this.attachLink;
	}

	/**
	 * Set the 附件存储.
	 * 
	 * @param attachStore
	 *            附件存储
	 */
	public void setAttachStore(Blob attachStore) {
		this.attachStore = attachStore;
	}

	/**
	 * Get the 附件存储.
	 * 
	 * @return 附件存储
	 */
	public Blob getAttachStore() {
		return this.attachStore;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		ExpertAttach other = (ExpertAttach) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}
